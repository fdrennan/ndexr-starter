# install the pseudo-package from this Github repository
devtools::install_github("max-alletsee/rstudio-themes")
install.packages('devtools')
library(rstudiothemes) # ... then load the library
# install the pseudo-package from this Github repository
devtools::install_github("max-alletsee/rstudio-themes")
library(rstudiothemes) # ... then load the library
# example 1: bulk-install all light themes
install_rstudio_themes(theme = "all_light")
# example 2: install two specific light themes
install_rstudio_themes(theme = c("Ayu Light", "Github {rsthemes}"))
install.packages('box')
install.packages('shiny')
renv::status()
renv::snapshot()
renv::update()
renv::clean()
renv::snapshot()
renv::hydrate()
renv::status()
renv::status()
renv::snapshot()
.libPaths()
library(shiny); source('app.r')
renv::restore()
renv::restore()
renv::restore()
renv::restore()
renv::restore()
remove.packages('lorem')
renv::clean()
renv::init()
renv::init()
renv::status()
renv::status()
renv::hydrate()
renv::update()
renv::init()
renv::status()
install.packages('sys')
renv::restore()
renv::snapshot()
renv::dependencies()
names(renv::dependencies())
renv::dependencies()$Package
names(renv::dependencies())
renv::dependencies(dev = T)$Package
library(shiny); source('app.r')
install.packages('fastmap')
library(shiny); source('app.r')
install.packages('withr')
source('app.r')
library(shiny); source('app.r')
jsonlite::fromJSON('renv.lock')
box::use(
shiny = shiny[tags],
. / head / head,
. / inputs / inputs
)
install.packages('readr')
renv::snapshot()
renv::hydrate()
renv::snapshot()
renv::update()
renv::upgrade()
library(shiny); source('app.r')
library(shiny); source('app.r')
renv::status()
renv::install('ggplot2')
library(shiny); source('app.r')
renv::status()
renv::snapshot()
library(shiny); source('app.r')
box::use(
shiny = shiny[tags],
. / head / head,
. / inputs / inputs
)
inputs
inputs$card
jsonlite::fromJSON('../renv.lock')
renv_lockfile <- jsonlite::fromJSON('../renv.lock')
renv_lockfile
names(renv_lockfile)
renv_lockfile$Packages
names(renv_lockfile$Packages)
library(shiny); source('app.r')
library(shiny); source('~/CEDAR/genview/app.r')
library(shiny); source('app.r')
renv_lockfile <- jsonlite::fromJSON('../renv.lock')
renv_lockfile <- jsonlite::fromJSON('./renv.lock')
renv_lockfile
renv_lockfile$R
library(shiny); source('app.r')
library(shiny); source('app.r')
library(shiny); source('app.r')
library(shiny); source('app.r')
library(shiny); source('app.r')
library(shiny); source('app.r')
source('app.r')
library(shiny); source('app.r')
request
# request <- as.list.environment(session_home$request)
request <- request[grepl('HTTP', names(request))]
request
library(shiny); source('~/CEDAR/genview/app.r')
library(shiny); source('~/CEDAR/genview/app.r')
library(shiny); source('app.r')
library(shiny); source('app.r')
library(shiny); source('app.r')
library(shiny); source('app.r')
library(shiny); source('app.r')
library(shiny); source('app.r')
renv_lockfile <- jsonlite::fromJSON('./renv.lock')
renv_lockfile
renv_lockfile$R$Repositories
renv_lockfile$R$Repositories$URL
glue::glue("ping {renv_lockfile$R$Repositories$URL}")
box::use(
shiny = shiny[tags],
. / head / head,
. / inputs / inputs,
. / connections / ssh
)
library(shiny); source('app.r')
source('app.r')
library(shiny); source('app.r')
box::use(shiny = shiny[tags], ./inputs/inputs)
box::use(shiny = shiny[tags], ./inputs/inputs)
box::use(shiny = shiny[tags], ./r/inputs/inputs)
library(shiny); source('app.r')
library(shiny); source('app.r')
install.packages('rstudioapi')
source('app.r')
renv_lockfile <- jsonlite::fromJSON('./renv.lock')
renv_lockfile$R$Repositories
renv_lockfile$R$Repositories$URL
glue::glue("ping {renv_lockfile$R$Repositories$URL}")
tags$html(
head$ui_head(
title = "Test Application for Connect",
description = "Test Application for Connect",
icon = "images/upsidedown.png",
author = "Freddy Drennan",
image = "",
stylesheet = "./css/home.css",
url = "",
name = "Test Application for Connect",
content = "Test Application for Connect"
),
tags$body(
tags$div(
class='container',
tags$div(
class='row',
tags$div(
class='col-12',
inputs$card(
"Connections",
)
inputs$card(
box::use(
shiny = shiny[tags],
. / head / head,
. / inputs / inputs,
ssh
)
ssh$ssh_exec_wait("ping", glue::glue("ping {renv_lockfile$R$Repositories$URL}"))
ssh$ssh_connect()
ssh$ssh_connect('localhost')
ssh$ssh_connect('localhost')
ssh$ssh_connect(host='localhost', keyfile = '~/.ssh/id_rsa')
ssh$ssh_connect(host='localhost', keyfile = '~/.ssh/id_ed25519')
?ssh::ssh_connect
session <- ssh$ssh_connect(host='localhost', keyfile = '~/.ssh/id_ed25519')
library(shiny); source('app.r')
box::use(
shiny = shiny[tags],
. / head / head,
. / inputs / inputs,
ssh
)
box::use(
shiny = shiny[tags],
. / head / head,
. / inputs / inputs,
ssh
)
session <- ssh$ssh_connect(host='localhost', passwd = Sys.getenv('passwd'))
renv_lockfile <- jsonlite::fromJSON('../renv.lock')
renv_lockfile <- jsonlite::fromJSON('./renv.lock')
renv_lockfile$R$Repositories$URL
ssh$ssh_exec_wait(session, 'ping', renv_lockfile$R$Repositories$URL)
session <- ssh$ssh_connect(host='localhost', passwd = Sys.getenv('passwd'))
ssh$ssh_exec_wait(session, 'ping', renv_lockfile$R$Repositories$URL)
ssh$ssh_exec_wait(session, 'curl', renv_lockfile$R$Repositories$URL)
ssh$ssh_exec_wait(session, 'ls')
ssh$ssh_exec_wait(session, 'ls -lah')
ssh$ssh_exec_wait(session, 'ls -lahr')
ssh$ssh_exec_wait(session, 'ls -lahr ~')
ssh$ssh_exec_wait(session, glue::glue('ls -lahr'))
repo_url <- renv_lockfile$R$Repositories$URL
glue::glue("ping {repo_url}")
ssh$ssh_exec_wait(session, glue::glue("ping {repo_url}"))
ssh$ssh_exec_wait(session, glue::glue("ping 'https://kite.cedar.roche.com"))
ssh$ssh_exec_wait(session, glue::glue("ping 'https://kite.cedar.rochee.com"))
ssh$ssh_exec_wait(session, glue::glue("ping 'https://kite.cedar.roche.com"))
ssh$ssh_exec_wait(session, glue::glue("ping https://kite.cedar.roche.com"))
ssh$ssh_exec_wait(session, glue::glue("ping https://roche.com"))
ssh$ssh_exec_wait(session, glue::glue('ls -lahr'))
library(shiny); source('app.r')
library(shiny); source('app.r')
library(shiny); source('app.r')
library(shiny); source('~/CEDAR/genview/app.r')
source('~/CEDAR/genview/app.r')
library(shiny); source('app.r')
library(shiny); source('app.r')
library(shiny); source('app.r')
con <- ssh$ssh_connect(host='localhost', passwd = Sys.getenv('passwd'))
box::use(
shiny = shiny[tags],
. / head / head,
. / inputs / inputs,
ssh
)
con <- ssh$ssh_connect(host='localhost', passwd = Sys.getenv('passwd'))
inputs$card(
"Connections",
{
cmd <- glue::glue("ping {repo_url}")
inputs$pan(cmd)
ssh$ssh_exec_wait(con, cmd)
}
),
?ssh::ssh_exec_wait
ssh::ssh_key_info()
ssh::ssh_exec_wait(session, 'ls')
con <- ssh$ssh_connect(host='localhost', passwd = Sys.getenv('passwd'))
ssh::ssh_exec_wait(session, 'ls')
ssh::ssh_exec_wait(con, 'ls')
ssh::ssh_exec_wait(con, 'ls -lah ~/.ssh')
library(shiny); source('app.r')
utils::capture.output
library(shiny); source('app.r')
library(shiny); source('app.r')
source("~/CEDAR/genview/src/r/home.r")
library(shiny); source('app.r')
library(shiny); source('app.r')
con <- ssh$ssh_connect(host='localhost', passwd = Sys.getenv('passwd'))
box::use(
shiny = shiny[tags],
. / head / head,
. / inputs / inputs,
ssh
)
con <- ssh$ssh_connect(host='localhost', passwd = Sys.getenv('passwd'))
cmd <- 'ls'
ssh$ssh_exec_wait(con, cmd)
cmd <- glue::glue("ping {repo_url}")
renv_lockfile <- jsonlite::fromJSON('./renv.lock')
# request <- request[grepl('HTTP', names(request))]
repo_url <- renv_lockfile$R$Repositories$URL
cmd <- glue::glue("ping {repo_url}")
ssh$ssh_exec_wait(con, cmd)
capture.output(ssh$ssh_exec_wait(con, cmd))
respssh$ssh_exec_wait(con, cmd)
resp <- ssh$ssh_exec_wait(con, cmd)
resp
tryCatch(ssh$ssh_exec_wait(con, cmd), error = function(err) as.character(err))
cmd
tryCatch(ssh$ssh_exec_wait(con, cmd), error = function(err) as.character(err))
cmd <- 'ping google.com'
tryCatch(ssh$ssh_exec_wait(con, cmd), error = function(err) as.character(err))
tryCatch(ssh$ssh_exec_wait(con, cmd), error = function(err) as.character(err))
tryCatch(ssh$ssh_exec_wait(con, cmd), error = function(err) as.character(err))
cmd <- glue::glue("ping {repo_url}")
ssh$ssh_exec_wait(con, cmd)
ssh$ssh_exec_wait(con, cmd)=='68'
box::use(
shiny = shiny[tags],
. / head / head,
. / inputs / inputs,
glue,
ssh
)
library(shiny); source('app.r')
library(shiny); source('~/CEDAR/genview/app.r')
library(shiny); source('app.r')
https://kite.cedar.roche.com/r/cedar_r4.4_bioc3.19-release/latest
cmd <- glue::glue("curl -I {repo_url}")
renv_lockfile <- jsonlite::fromJSON('./renv.lock')
# request <- request[grepl('HTTP', names(request))]
repo_url <- renv_lockfile$R$Repositories$URL
cmd <- glue::glue("curl -I {repo_url}")
con <- ssh$ssh_connect(host='localhost', passwd = Sys.getenv('passwd'))
box::use(
shiny = shiny[tags],
. / head / head,
. / inputs / inputs,
glue,
ssh
)
con <- ssh$ssh_connect(host='localhost', passwd = Sys.getenv('passwd'))
glue("curl -I {repo_url}")
glue$glue("curl -I {repo_url}")
cmd <- glue::glue("curl -I {repo_url}")
inputs$pan(cmd)
# inputs$pan(cmd)
resp <- ssh$ssh_exec_wait(con, cmd)
library(shiny); source('app.r')
library(shiny); source('app.r')
renv::install('styler')
renv::snapshot()
styler::style_dir()
source('app.r')
library(shiny); source('app.r')
renv_lockfile <- jsonlite::fromJSON("./renv.lock")
box::use(
shiny = shiny[tags],
. / head / head,
. / inputs / inputs,
glue,
ssh
)
renv_lockfile <- jsonlite::fromJSON("./renv.lock")
box::use(
shiny = shiny[tags],
. / head / head,
. / inputs / inputs,
glue,
ssh
)
con <- ssh$ssh_connect(host = "localhost", passwd = Sys.getenv("passwd"))
library(shiny); source('app.r')
cmd <- glue::glue("nc -zv https://kite.cedar.roche.com 443")
https://kite.cedar.roche.com/
cmd
library(shiny); source('app.r')
library(shiny); source('~/CEDAR/genview/app.r')
library(shiny); source('app.r')
source('app.r')
library(shiny); source('app.r')
fs::dir_ls(".", regexp="*.r$")
library(shiny); source('~/CEDAR/genview/app.r')
library(shiny); source('~/CEDAR/genview/app.r')
library(shiny); source('app.r')
source("~/CEDAR/genview/src/r/home.r")
source("~/CEDAR/genview/src/r/home.r")
